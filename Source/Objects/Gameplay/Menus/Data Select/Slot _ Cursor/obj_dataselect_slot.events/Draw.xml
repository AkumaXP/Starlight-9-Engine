<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="DRAW" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">/// Draw slot.

// Draw main sprite.
draw_sprite(sprite_index, -1, x, y);

// Draw Slot icon.
if (dataslot_completed == 0)
{
    draw_sprite(spr_dataselect_icon, dataslot_zone, x + 5, y + 5);
}
else
{
    draw_sprite(spr_dataselect_icon, sprite_get_number(spr_dataselect_icon) - 1, x + 5, y + 5);
}

// Draw characters.
if (dataslot_cpu != 0)
{
    if (dataslot_zone == 0)
    {
        draw_sprite_ext(spr_dataselect_characters, dataslot_cpu, (x + sprite_get_width(sprite_index) / 2) + 8, y + sprite_get_height(sprite_index) - 64, -1, 1, 0, c_white, 1);
    }
    else
    {
        draw_sprite_ext(spr_dataselect_characters, dataslot_cpu, (x + sprite_get_width(sprite_index) / 2) + 8, y + sprite_get_height(sprite_index) - 97, -1, 1, 0, c_white, 1);
    }
}
if (dataslot_character != 0)
{
    if (dataslot_cpu == 0)
    {
        if (dataslot_zone == 0)
        {
            draw_sprite_ext(spr_dataselect_characters, dataslot_character, (x + sprite_get_width(sprite_index) / 2) - 2, y + sprite_get_height(sprite_index) - 64, 1, 1, 0, c_white, 1);
        }
        else
        {
            draw_sprite_ext(spr_dataselect_characters, dataslot_character, (x + sprite_get_width(sprite_index) / 2) - 2, y + sprite_get_height(sprite_index) - 97, 1, 1, 0, c_white, 1);
        }
    }
    else
    {
        if (dataslot_zone == 0)
        {
            draw_sprite_ext(spr_dataselect_characters, dataslot_character, (x + sprite_get_width(sprite_index) / 2) - 12, y + sprite_get_height(sprite_index) - 64, 1, 1, 0, c_white, 1);
        }
        else
        {
            draw_sprite_ext(spr_dataselect_characters, dataslot_character, (x + sprite_get_width(sprite_index) / 2) - 12, y + sprite_get_height(sprite_index) - 97, 1, 1, 0, c_white, 1);
        }
    }
}

// Draw lives, continues and emeralds.
if (dataslot_zone != 0)
{
    draw_sprite(spr_dataselect_lives, dataslot_character - 1, x + 29, y + 131);
    draw_sprite(spr_continues,        dataslot_character - 1, x + 38, y + 173);

    if (dataslot_emeralds &gt; 0)
    {
        dataslot_emerald_frame += 0.20;
        draw_sprite(spr_dataselect_emeralds, floor(dataslot_emerald_frame), x + 29, y + 113);
        draw_text(x + 29 + 24, y + 115, string_place_number(dataslot_emeralds, 2, 0));
    }

    draw_set_font(global.font_dataselect);
    draw_set_color(c_white);
    draw_text(x + 53, y + 133, string_place_number(dataslot_lives, 2, 0));
    draw_text(x + 53, y + 159, string_place_number(dataslot_continues, 2, 0));
}

// Draw arrows.
if (obj_dataselect_cursor.datacursor_slot_index == dataslot_index &amp;&amp; obj_dataselect_cursor.datacursor_direction == 0 &amp;&amp; !obj_dataselect_robotnik.active)
{
    if (dataslot_zone == 0)
    {
        dataslot_arrow_frame += 0.15;
        draw_sprite(spr_dataselect_arrow, floor(dataslot_arrow_frame), x + sprite_get_width(sprite_index) / 2, y + sprite_get_height(sprite_index) / 2 + 27)
    }
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
