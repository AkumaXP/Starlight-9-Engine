<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="STEP" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">/// Movement &amp; animation.

// Move the emblem up and down.
title_y += 4;
y        = (SCREEN_HEIGHT / 2) + lengthdir_y(4, title_y);

// Move the view horizontally for the parallax effect.
view_xview[0] += 8;

// Handle variable animation speed (credit to VectorSatyr).
if (image_index &lt; 1)
{
    image_speed = 0.03;
}
else if (image_index &lt; 9)
{
    image_speed = 1;
}
else
{
    image_speed = 0.15;
}
</argument>
      </arguments>
    </action>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">/// Change menu option.
if (title_active)
{
    // Change options.
    if (keyboard_check_pressed(global.key_right))
    {
        if (title_option &lt; 2)
        {
            title_option += 1;
        }
        else
        {
            title_option = 0;
        }
        audio_play(SFX._general_switch, SFX.sfx_volume, 1, 0, 0);
    }
    if (keyboard_check_pressed(global.key_left))
    {
        if (title_option &gt; 0)
        {
            title_option -= 1;
        }
        else
        {
            title_option = 2;
        }
        audio_play(SFX._general_switch, SFX.sfx_volume, 1, 0, 0);
    }

    // Set option string.
    switch (title_option)
    {
        case 0: title_string = "START";   break;
        case 1: title_string = "OPTIONS"; break;
        case 2: title_string = "EXIT";    break;
    }

    // Choose an option.
    if (keyboard_check_pressed(global.key_action) || keyboard_check_pressed(global.key_start))
    {
        title_active = false; // Disable menu control.
        switch (title_option)
        {
            case 0:
            {
                room_fade_to(rm_data_select);
                break;
            }
            case 1:
            {
                room_fade_to(rm_options);
                break;
            }
            case 2:
            {
                if (!instance_exists(obj_fade_game_end))
                {
                    instance_create(0, 0, obj_fade_game_end);
                }
                break;
            }
        }
    }
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
